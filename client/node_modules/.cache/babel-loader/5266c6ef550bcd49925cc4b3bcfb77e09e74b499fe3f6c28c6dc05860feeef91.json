{"ast":null,"code":"var _jsxFileName = \"/Users/johnlavender/Documents/UGA/Fall2022/CSCI 4300/FinalProject/src/pages/reset-pwd/DoResetPwd.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ErrorModal from \"../error/ErrorModal\";\nimport \"./DoResetPwd.css\";\nimport \"../../shared/style/common.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoResetPwd = _ref => {\n  _s();\n  let {\n    users,\n    tokens\n  } = _ref;\n  const [usersState, setUsersState] = useState(users);\n  const [tokensState, setTokensState] = useState(tokens);\n  const [newPwd, setNewPwd] = useState(\"\");\n  const [newPwdConfirm, setNewPwdConfirm] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [isPwdChangeSuccess, setIsPwdChangeSuccess] = useState(false);\n  const existsUserById = id => {\n    return usersState.some(user => user.id === id);\n  };\n  const existsTokenByUserIdAndCode = (id, code) => {\n    return tokensState.some(token => token.userId === id && token.code === code);\n  };\n  const {\n    userId,\n    tokenCode\n  } = useParams();\n  let isLoggedIn = false;\n  if (isPwdChangeSuccess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Password successfully changed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"button-primary button-primary-green\",\n          children: \"Go to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  if (!existsUserById(userId) || !existsTokenByUserIdAndCode(userId, tokenCode)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  const tempEncryptFunc = pwd => {\n    return pwd;\n  };\n  const handleChangeUserPwd = e => {\n    console.log(\"New pwd: \" + newPwd);\n    console.log(\"New pwd confirm: \" + newPwdConfirm);\n    if (newPwd !== newPwdConfirm) {\n      setIsError(true);\n    } else {\n      const updatedUsers = usersState.map(user => {\n        if (user.id === userId) {\n          const newPwdEncrypted = tempEncryptFunc(newPwd);\n          return {\n            ...user,\n            password: newPwdEncrypted\n          };\n        }\n        return user;\n      });\n      setUsersState(updatedUsers);\n      const updatedTokens = tokensState.filter(token => token.userId != userId);\n      setTokensState(updatedTokens);\n      setIsPwdChangeSuccess(true);\n    }\n    setNewPwd(\"\");\n    setNewPwdConfirm(\"\");\n    e.preventDefault();\n  };\n  const onCloseErrorModal = () => {\n    setIsError(false);\n  };\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorModal, {\n      msg: \"Password does not match confirmation!\",\n      onClose: onCloseErrorModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"form-title\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center form-group mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPwd,\n              className: \"form-control mt-1\",\n              placeholder: \"Enter your new password...\",\n              onChange: e => setNewPwd(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center form-group mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPwdConfirm,\n              className: \"form-control mt-1\",\n              placeholder: \"Confirm your new password...\",\n              onChange: e => setNewPwdConfirm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button-primary button-primary-green\",\n            onClick: handleChangeUserPwd,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(DoResetPwd, \"NfsI/ipQTTQpNRMVyuEkBXGijIU=\", false, function () {\n  return [useParams];\n});\n_c = DoResetPwd;\nexport default DoResetPwd;\nvar _c;\n$RefreshReg$(_c, \"DoResetPwd\");","map":{"version":3,"names":["React","useState","Link","useParams","ErrorModal","DoResetPwd","users","tokens","usersState","setUsersState","tokensState","setTokensState","newPwd","setNewPwd","newPwdConfirm","setNewPwdConfirm","isError","setIsError","isPwdChangeSuccess","setIsPwdChangeSuccess","existsUserById","id","some","user","existsTokenByUserIdAndCode","code","token","userId","tokenCode","isLoggedIn","tempEncryptFunc","pwd","handleChangeUserPwd","e","console","log","updatedUsers","map","newPwdEncrypted","password","updatedTokens","filter","preventDefault","onCloseErrorModal","target","value"],"sources":["/Users/johnlavender/Documents/UGA/Fall2022/CSCI 4300/FinalProject/src/pages/reset-pwd/DoResetPwd.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport ErrorModal from \"../error/ErrorModal\";\n\nimport \"./DoResetPwd.css\";\nimport \"../../shared/style/common.css\";\n\nconst DoResetPwd = ({users, tokens}) => {\n  const [usersState, setUsersState] = useState(users);\n  const [tokensState, setTokensState] = useState(tokens);\n  const [newPwd, setNewPwd] = useState(\"\");\n  const [newPwdConfirm, setNewPwdConfirm] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [isPwdChangeSuccess, setIsPwdChangeSuccess] = useState(false);\n\n  const existsUserById = (id) => {\n    return usersState.some((user) => user.id === id);\n  };\n\n  const existsTokenByUserIdAndCode = (id, code) => {\n    return tokensState.some((token) => token.userId === id && token.code === code);\n  };\n\n  const {userId, tokenCode} = useParams();\n\n  let isLoggedIn = false;\n\n  if (isPwdChangeSuccess) {\n    return (\n      <div>\n        <h1 className=\"text-center\">Password successfully changed!</h1>       \n        {!isLoggedIn &&\n          <Link to=\"/login\">\n            <span className=\"button-primary button-primary-green\">Go to Login</span>\n          </Link>       \n        }\n      </div>\n    );\n  }  \n\n  if (!existsUserById(userId) || !existsTokenByUserIdAndCode(userId, tokenCode)) {\n    return (\n      <div>\n        <h1>ERROR</h1>\n      </div>\n    );\n  }\n\n  const tempEncryptFunc = (pwd) => {\n    return pwd;\n  };\n\n  const handleChangeUserPwd = (e) => {\n    console.log(\"New pwd: \" + newPwd);\n    console.log(\"New pwd confirm: \" + newPwdConfirm);\n    if (newPwd !== newPwdConfirm) {\n      setIsError(true);\n    } else {\n      const updatedUsers = usersState.map((user) => {\n        if (user.id === userId) {\n          const newPwdEncrypted = tempEncryptFunc(newPwd);\n          return {...user, password: newPwdEncrypted};\n        }\n        return user;\n      });\n      setUsersState(updatedUsers);\n      const updatedTokens = tokensState.filter((token) => \n        token.userId != userId);\n      setTokensState(updatedTokens);\n      setIsPwdChangeSuccess(true);\n    }\n    setNewPwd(\"\");\n    setNewPwdConfirm(\"\");\n    e.preventDefault();\n  };\n\n  const onCloseErrorModal = () => {\n    setIsError(false);\n  };\n\n  if (isError) {\n    return <ErrorModal msg=\"Password does not match confirmation!\" onClose={onCloseErrorModal}/>\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"form\">\n        <div className=\"form-content\">\n          <h3 className=\"form-title\">Change Password</h3>\n          <div className=\"text-center form-group mt-3\">\n            <label>\n              New Password\n              <input\n                type=\"password\"\n                value={newPwd}\n                className=\"form-control mt-1\"\n                placeholder=\"Enter your new password...\"\n                onChange={(e) => setNewPwd(e.target.value)}\n              />\n            </label>\n          </div>\n          <div className=\"text-center form-group mt-3\">\n            <label>\n              <input\n                type=\"password\"\n                value={newPwdConfirm}\n                className=\"form-control mt-1\"\n                placeholder=\"Confirm your new password...\"\n                onChange={(e) => setNewPwdConfirm(e.target.value)}\n              />\n            </label>\n          </div>\n          <div className=\"text-center mt-3\">\n            <button type=\"submit\" className=\"button-primary button-primary-green\" onClick={handleChangeUserPwd}>\n              Change Password\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DoResetPwd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}